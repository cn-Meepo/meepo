<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Spring 希望管理所有的业务逻辑组件 -->
	<context:component-scan base-package="com.meepo.mybatis">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />

	<!-- Spring用来控制业务逻辑。数据源、事物控制、aop -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- spring事物管理 -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 开启基于注解的事物 -->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />


	<!-- 整合mybatis 目的：1、spring管理所有组件。mapper的实现类 service==> Dao @Autowired；自动注入mapper； 
		2、spring用来管理事物，spring声明式事物 -->

	<!-- 创建出 SqlSessionFactory对象 -->
	<bean id="" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!--configLocation 指定全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 指定mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
		<property name="plugins">
	    	<array>
	      		<bean class="com.github.pagehelper.PageInterceptor">
		      		<property name="properties">
			  		<!--使用下面的方式配置参数，一行配置一个 -->
			    		<value>
			       			params=value1
			    		</value>
			 		</property>
				</bean>
			</array>
		</property>
	</bean>

	<!--扫描所有的mapper接口的实现，让这些mapper能够自动注入； base-package 指定mapper接口的包名 -->
	<mybatis-spring:scan base-package="com.meepo.mybatis.*.dao" />
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="com.meepo.mybatis.dao"></property> </bean> -->
</beans>
